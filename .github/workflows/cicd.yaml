name: cicd

permissions:
  contents: write
  
on:
  push:
    tags:
      - 'v*'  # Match version tags like v1, v2, etc.
    # paths:
    #   - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

      # - name: Shorten commit id
      #   shell: bash
      #   run: |
      #     echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
          
      - name: Set COMMIT_ID
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "COMMIT_ID=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "COMMIT_ID=${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: andynze4/python-app:${{ env.COMMIT_ID }}
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3

      - name: Modify values file
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/python-app/values.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}'

      - name: Install argocd
        shell: bash
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-darwin-arm64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      # - name: Install argocd
      #   shell: bash
      #   run: |
      #     curl -ksSL -o argocd https://argocd-server.argocd/download/argocd-linux-amd64


      - name: Argocd app sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username ${{ secrets.ARGOCD_USER }} \
            --password  ${{ secrets.ARGOCD_PASSWORD }}
          argocd app sync python-app


### Commit-ID
# name: cicd

# permissions:
#   contents: write

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Docker tag version (e.g. v1, v2)'
#         required: true

# env:
#   VERSION_TAG: ${{ github.event.inputs.version }}

# jobs:
#   ci:
#     runs-on: ubuntu-latest
#     outputs:
#       commit_id: ${{ steps.shorten.outputs.commit_id }}
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v3

#       - name: Shorten commit id
#         id: shorten
#         shell: bash
#         run: echo "commit_id=${GITHUB_SHA::6}" >> $GITHUB_OUTPUT

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker images
#         uses: docker/build-push-action@v6
#         with:
#           push: true
#           tags: |
#             andynze4/python-app:${{ steps.shorten.outputs.commit_id }}
#             ${{ github.event.inputs.version && format('andynze4/python-app:{0}', github.event.inputs.version) }}

  # cd:
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install yq
  #       run: pip install yq

  #     - name: Modify values.yaml with version tag
  #       run: |
  #         echo "Updating tag to $VERSION_TAG"
  #         yq -Yi '.image.tag = strenv(VERSION_TAG)' charts/python-app/values.yaml

  #     - name: Commit updated values.yaml
  #       uses: EndBug/add-and-commit@v9
  #       with:
  #         message: 'Update image tag to ${{ env.VERSION_TAG }}'

  #     - name: Install ArgoCD CLI
  #       run: |
  #         curl -ksSL -o argocd https://argocd-server.argocd/download/argocd-linux-amd64
  #         chmod +x argocd
  #         sudo mv argocd /usr/local/bin/

  #     - name: ArgoCD App Sync
  #       run: |
  #         argocd login argocd-server.argocd \
  #           --insecure \
  #           --grpc-web \
  #           --username admin \
  #           --password ${{ secrets.ARGOCD_PASSWORD }}

  #         argocd app sync python-app